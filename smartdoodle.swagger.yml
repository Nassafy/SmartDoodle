swagger: "2.0"
info:
  description: "Swagger of the smart doodle project"
  version: "0.0.1"
  title: "Swagger SmartDoodle API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/v1"
tags:
- name: "Poll"
  description: "Everything to manage polls"
  externalDocs:
    description: "Find out more"
    url: github.com/Nassafy/SmartDoodle

paths:
  /polls:
    post:
      tags:
      - "Poll"
      summary: "Create a new poll"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "body"
          schema:
            $ref: "#/definitions/Poll"
          required: true
          description: Numeric ID of the user to patch
      responses:
        200:
          description: "OK"
        400:
          description: "Error"



  /polls/{pollID}:
    get:
      summary: "Find a poll by ID"
      tags:
      - "Poll"
      parameters:
      - name: "PollId"
        in: "path"
        description: "ID of Poll to return"
        required: true
        type: "string"
      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/Poll"
        '400':
          description: Error
    patch:
      tags:
      - "Poll"
      summary: "Update a poll"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "body"
          schema:
            $ref: "#/definitions/Poll"
          required: true
          description: Numeric ID of the user to get
      responses:
        200:
          description: "OK"
        400:
          description: "Error"



  /polls/{pollID}/disponibility/{disponibilityID}:
    patch:
      tags:
      - "Poll"
      parameters:
      - name: "dateId"
        in: "body"
        description: "Id of the date"
        required: true
        type: "string"
      - name: "userId"
        in: "body"
        required: true
        type: string
        description: "Id of the user"
      - name: "available"
        in: "body"
        required: true
        type: boolean
        description: "If the user is available"
      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/Poll"
        '400':
          description: Error


definitions:
  Poll:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      place:
        type: "string"
      pad_link:
        type: "string"
      slack_link:
        type: "string"
      peoples:
        type: "array"
        items:
          $ref: "#/definitions/People"
      dates:
        type: "array"
        items:
          $ref: "#/definitions/Date"
    required:
    - "id"
    - "name"
  People:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      mail:
        type: "string"
      dates:
        type: "array"
        items:
          $ref: "#/definitions/Date"
        description: "All the date when the person is available"
        
  Date:
    type: "object"
    properties:
      from:
        type: "string"
        description: "beginning ISO date"
      to:
        type: "string"
        description: "beginning ISO date"
      peoples:
        type: "array"
        items: 
          $ref: "#/definitions/People"
        description: "All the person available at this date"
    